name: Python package

on:
  workflow_call:
    inputs:
      project-directory:   # e.g. "src/agent" (== package-directory)
        required: true
        type: string
      package-directory:   # e.g. "src/agent"
        required: true
        type: string
      package:             # "gs-schemas" | "gs-env" | "gs-agent"
        required: true
        type: string
      runs-on:             # e.g. "ubuntu-24.04"
        required: true
        type: string

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  UV_LINK_MODE: copy

jobs:
  lint-type-test:
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.project-directory }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      # Cache venv in *this package dir* + uv cache
      - name: Cache venv & uv wheels
        uses: actions/cache@v4
        with:
          path: |
            ${{ inputs.project-directory }}/.venv
            ~/.cache/uv
          key: >-
            ${{ runner.os }}-py312-${{ inputs.package }}-
            ${{ hashFiles('uv.lock', 'pyproject.toml', 'src/**/pyproject.toml') }}

      - name: Create venv (in package dir)
        run: uv venv --python 3.12

      # Build tools needed for PEP 660 editable installs without isolation
      - name: Install build tools
        run: uv pip install hatchling editables setuptools wheel

      # Install upstream local deps by *path* (stay in this package dir)
      - name: Install local dependencies (editable)
        shell: bash
        run: |
          set -eux
          pkg="${{ inputs.package }}"
          if [[ "$pkg" == "gs-schemas" ]]; then
            uv pip install -e . --no-build-isolation
          elif [[ "$pkg" == "gs-env" ]]; then
            uv pip install -e ../schemas --no-build-isolation
            uv pip install -e .          --no-build-isolation
          elif [[ "$pkg" == "gs-agent" ]]; then
            uv pip install -e ../schemas --no-build-isolation
            uv pip install -e ../env     --no-build-isolation
            uv pip install -e .          --no-build-isolation
          else
            echo "Unknown package: $pkg" >&2
            exit 2
          fi

      - name: Install dev tools
        run: uv pip install pytest ruff pyright

      # Run tools *inside this venv*; never reference repo root
      - name: Ruff (lint)
        run: uv run python -m ruff check . --output-format=github

      - name: Pyright (type check)
        run: uv run pyright -p .

      # Allow exit code 5 if no tests
      - name: Pytest
        run: uv run python -m pytest -q || ([ $? -eq 5 ] && exit 0)
